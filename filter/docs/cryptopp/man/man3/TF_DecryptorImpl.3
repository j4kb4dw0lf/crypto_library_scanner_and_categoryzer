.TH "TF_DecryptorImpl< SCHEME_OPTIONS >" 3 "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
TF_DecryptorImpl< SCHEME_OPTIONS > \- Trapdoor Function (TF) decryptor options\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fR#include <pubkey\&.h>\fP
.PP
Inherits \fBTF_ObjectImpl< TF_DecryptorBase, SCHEME_OPTIONS, SCHEME_OPTIONS::PrivateKey >\fP\&.
.PP
Inherited by \fBPK_FinalTemplate< TF_DecryptorImpl< SchemeOptions > >\fP\&.
.SS "Additional Inherited Members"


Public Types inherited from \fBTF_ObjectImpl< TF_DecryptorBase, SCHEME_OPTIONS, SCHEME_OPTIONS::PrivateKey >\fP
.in +1c
.ti -1c
.RI "typedef SCHEME_OPTIONS::PrivateKey \fBKeyClass\fP"
.br
.in -1c

Public Types inherited from \fBTF_ObjectImplBase< TF_DecryptorBase, SCHEME_OPTIONS, SCHEME_OPTIONS::PrivateKey >\fP
.in +1c
.ti -1c
.RI "typedef SCHEME_OPTIONS \fBSchemeOptions\fP"
.br
.ti -1c
.RI "typedef SCHEME_OPTIONS::PrivateKey \fBKeyClass\fP"
.br
.in -1c

Public Member Functions inherited from \fBTF_ObjectImpl< TF_DecryptorBase, SCHEME_OPTIONS, SCHEME_OPTIONS::PrivateKey >\fP
.in +1c
.ti -1c
.RI "const KeyClass & \fBGetKey\fP () const"
.br
.ti -1c
.RI "KeyClass & \fBAccessKey\fP ()"
.br
.in -1c

Public Member Functions inherited from \fBTF_ObjectImplBase< TF_DecryptorBase, SCHEME_OPTIONS, SCHEME_OPTIONS::PrivateKey >\fP
.in +1c
.ti -1c
.RI "\fBPublicKey\fP & \fBAccessPublicKey\fP ()"
.br
.ti -1c
.RI "const \fBPublicKey\fP & \fBGetPublicKey\fP () const"
.br
.ti -1c
.RI "\fBPrivateKey\fP & \fBAccessPrivateKey\fP ()"
.br
.ti -1c
.RI "const \fBPrivateKey\fP & \fBGetPrivateKey\fP () const"
.br
.ti -1c
.RI "const KeyClass & \fBGetTrapdoorFunction\fP () const"
.br
.ti -1c
.RI "\fBPK_MessageAccumulator\fP * \fBNewSignatureAccumulator\fP (\fBRandomNumberGenerator\fP &rng) const"
.br
.ti -1c
.RI "\fBPK_MessageAccumulator\fP * \fBNewVerificationAccumulator\fP () const"
.br
.in -1c

Public Member Functions inherited from \fBAlgorithmImpl< TF_DecryptorBase, SCHEME_OPTIONS::AlgorithmInfo >\fP
.in +1c
.ti -1c
.RI "std::string \fBAlgorithmName\fP () const"
.br
.RI "The algorithm name\&. "
.in -1c

Public Member Functions inherited from \fBTF_DecryptorBase\fP
.in +1c
.ti -1c
.RI "\fBDecodingResult\fP \fBDecrypt\fP (\fBRandomNumberGenerator\fP &rng, const \fBbyte\fP *ciphertext, size_t ciphertextLength, \fBbyte\fP *plaintext, const \fBNameValuePairs\fP &parameters=g_nullNameValuePairs) const"
.br
.RI "Decrypt a byte string\&. "
.in -1c

Public Member Functions inherited from \fBTF_CryptoSystemBase< PK_Decryptor, TF_Base< TrapdoorFunctionInverse, PK_EncryptionMessageEncodingMethod > >\fP
.in +1c
.ti -1c
.RI "bool \fBParameterSupported\fP (const char *name) const"
.br
.ti -1c
.RI "size_t \fBFixedMaxPlaintextLength\fP () const"
.br
.ti -1c
.RI "size_t \fBFixedCiphertextLength\fP () const"
.br
.in -1c

Public Member Functions inherited from \fBPK_FixedLengthCryptoSystemImpl< PK_Decryptor >\fP
.in +1c
.ti -1c
.RI "size_t \fBMaxPlaintextLength\fP (size_t ciphertextLength) const"
.br
.ti -1c
.RI "size_t \fBCiphertextLength\fP (size_t plaintextLength) const"
.br
.in -1c

Public Member Functions inherited from \fBPK_Decryptor\fP
.in +1c
.ti -1c
.RI "virtual \fBBufferedTransformation\fP * \fBCreateDecryptionFilter\fP (\fBRandomNumberGenerator\fP &rng, \fBBufferedTransformation\fP *attachment=NULLPTR, const \fBNameValuePairs\fP &parameters=g_nullNameValuePairs) const"
.br
.RI "Create a new decryption filter\&. "
.ti -1c
.RI "\fBDecodingResult\fP \fBFixedLengthDecrypt\fP (\fBRandomNumberGenerator\fP &rng, const \fBbyte\fP *ciphertext, \fBbyte\fP *plaintext, const \fBNameValuePairs\fP &parameters=g_nullNameValuePairs) const"
.br
.RI "Decrypt a fixed size ciphertext\&. "
.in -1c

Public Member Functions inherited from \fBPrivateKeyAlgorithm\fP
.in +1c
.ti -1c
.RI "\fBCryptoMaterial\fP & \fBAccessMaterial\fP ()"
.br
.RI "Retrieves a reference to a Private Key\&. "
.ti -1c
.RI "const \fBCryptoMaterial\fP & \fBGetMaterial\fP () const"
.br
.RI "Retrieves a reference to a Private Key\&. "
.in -1c

Public Member Functions inherited from \fBAlgorithm\fP
.in +1c
.ti -1c
.RI "\fBAlgorithm\fP (bool checkSelfTestStatus=true)"
.br
.RI "Interface for all crypto algorithms\&. "
.ti -1c
.RI "virtual std::string \fBAlgorithmProvider\fP () const"
.br
.RI "Retrieve the provider of this algorithm\&. "
.in -1c

Public Member Functions inherited from \fBClonable\fP
.in +1c
.ti -1c
.RI "virtual \fBClonable\fP * \fBClone\fP () const"
.br
.RI "Copies this object\&. "
.in -1c

Static Public Member Functions inherited from \fBAlgorithmImpl< TF_DecryptorBase, SCHEME_OPTIONS::AlgorithmInfo >\fP
.in +1c
.ti -1c
.RI "static std::string CRYPTOPP_API \fBStaticAlgorithmName\fP ()"
.br
.RI "The algorithm name\&. "
.in -1c

Protected Types inherited from \fBTF_Base< TrapdoorFunctionInverse, PK_EncryptionMessageEncodingMethod >\fP
.in +1c
.ti -1c
.RI "typedef \fBTrapdoorFunctionInverse\fP \fBTrapdoorFunctionInterface\fP"
.br
.ti -1c
.RI "typedef \fBPK_EncryptionMessageEncodingMethod\fP \fBMessageEncodingInterface\fP"
.br
.in -1c

Protected Member Functions inherited from \fBTF_ObjectImplBase< TF_DecryptorBase, SCHEME_OPTIONS, SCHEME_OPTIONS::PrivateKey >\fP
.in +1c
.ti -1c
.RI "const \fBTF_DecryptorBase::MessageEncodingInterface\fP & \fBGetMessageEncodingInterface\fP () const"
.br
.ti -1c
.RI "const \fBTrapdoorFunctionBounds\fP & \fBGetTrapdoorFunctionBounds\fP () const"
.br
.ti -1c
.RI "const \fBTF_DecryptorBase::TrapdoorFunctionInterface\fP & \fBGetTrapdoorFunctionInterface\fP () const"
.br
.ti -1c
.RI "HashIdentifier \fBGetHashIdentifier\fP () const"
.br
.ti -1c
.RI "size_t \fBGetDigestSize\fP () const"
.br
.in -1c

Protected Member Functions inherited from \fBTF_CryptoSystemBase< PK_Decryptor, TF_Base< TrapdoorFunctionInverse, PK_EncryptionMessageEncodingMethod > >\fP
.in +1c
.ti -1c
.RI "size_t \fBPaddedBlockByteLength\fP () const"
.br
.ti -1c
.RI "size_t \fBPaddedBlockBitLength\fP () const"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<class SCHEME_OPTIONS>
.br
class TF_DecryptorImpl< SCHEME_OPTIONS >"Trapdoor Function (TF) decryptor options\&. 


.PP
\fBTemplate Parameters\fP
.RS 4
\fISCHEME_OPTIONS\fP scheme options class 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for My Project from the source code\&.
