.TH "AlgorithmParameters" 3 "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
AlgorithmParameters \- An object that implements \fBNameValuePairs\fP\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fR#include <algparam\&.h>\fP
.PP
Inherits \fBNameValuePairs\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBAlgorithmParameters\fP ()"
.br
.RI "Construct a \fBAlgorithmParameters\fP\&. "
.ti -1c
.RI "\fBAlgorithmParameters\fP (const \fBAlgorithmParameters\fP &x)"
.br
.ti -1c
.RI "\fBAlgorithmParameters\fP & \fBoperator=\fP (const \fBAlgorithmParameters\fP &x)"
.br
.ti -1c
.RI "template<class T> \fBAlgorithmParameters\fP & \fBoperator()\fP (const char *name, const T &value, bool throwIfNotUsed)"
.br
.ti -1c
.RI "template<class T> \fBAlgorithmParameters\fP & \fBoperator()\fP (const char *name, const T &value)"
.br
.RI "Appends a NameValuePair to a collection of \fBNameValuePairs\fP\&. "
.ti -1c
.RI "bool \fBGetVoidValue\fP (const char *name, const std::type_info &valueType, void *pValue) const"
.br
.RI "Get a named value\&. "
.in -1c

Public Member Functions inherited from \fBNameValuePairs\fP
.in +1c
.ti -1c
.RI "template<class T> bool \fBGetThisObject\fP (T &object) const"
.br
.RI "Get a copy of this object or subobject\&. "
.ti -1c
.RI "template<class T> bool \fBGetThisPointer\fP (T *&ptr) const"
.br
.RI "Get a pointer to this object\&. "
.ti -1c
.RI "template<class T> bool \fBGetValue\fP (const char *name, T &value) const"
.br
.RI "Get a named value\&. "
.ti -1c
.RI "template<class T> T \fBGetValueWithDefault\fP (const char *name, T defaultValue) const"
.br
.RI "Get a named value\&. "
.ti -1c
.RI "CRYPTOPP_DLL std::string \fBGetValueNames\fP () const"
.br
.RI "Get a list of value names that can be retrieved\&. "
.ti -1c
.RI "CRYPTOPP_DLL bool \fBGetIntValue\fP (const char *name, int &value) const"
.br
.RI "Get a named value with type int\&. "
.ti -1c
.RI "CRYPTOPP_DLL int \fBGetIntValueWithDefault\fP (const char *name, int defaultValue) const"
.br
.RI "Get a named value with type int, with default\&. "
.ti -1c
.RI "CRYPTOPP_DLL bool \fBGetWord64Value\fP (const char *name, word64 &value) const"
.br
.RI "Get a named value with type word64\&. "
.ti -1c
.RI "CRYPTOPP_DLL word64 \fBGetWord64ValueWithDefault\fP (const char *name, word64 defaultValue) const"
.br
.RI "Get a named value with type word64, with default\&. "
.ti -1c
.RI "template<class T> void \fBGetRequiredParameter\fP (const char *className, const char *name, T &value) const"
.br
.RI "Retrieves a required name/value pair\&. "
.ti -1c
.RI "CRYPTOPP_DLL void \fBGetRequiredIntParameter\fP (const char *className, const char *name, int &value) const"
.br
.RI "Retrieves a required name/value pair\&. "
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "\fBmember_ptr\fP< \fBAlgorithmParametersBase\fP > \fBm_next\fP"
.br
.ti -1c
.RI "bool \fBm_defaultThrowIfNotUsed\fP"
.br
.in -1c
.SS "Additional Inherited Members"


Static Public Member Functions inherited from \fBNameValuePairs\fP
.in +1c
.ti -1c
.RI "static CRYPTOPP_DLL void CRYPTOPP_API \fBThrowIfTypeMismatch\fP (const char *name, const std::type_info &stored, const std::type_info &retrieving)"
.br
.RI "Ensures an expected name and type is present\&. "
.in -1c
.SH "Detailed Description"
.PP 
An object that implements \fBNameValuePairs\fP\&. 


.PP
\fBNote\fP
.RS 4
A \fBNameValuePairs\fP object containing an arbitrary number of name value pairs may be constructed by repeatedly using operator() on the object returned by MakeParameters, for example: 
.PP
.nf

    \fBAlgorithmParameters\fP parameters = MakeParameters(name1, value1)(name2, value2)(name3, value3);
  
.fi
.PP
 
.RE
.PP

.SH "Constructor & Destructor Documentation"
.PP 
.SS "AlgorithmParameters::AlgorithmParameters ()"

.PP
Construct a \fBAlgorithmParameters\fP\&. 
.PP
\fBNote\fP
.RS 4
A \fBNameValuePairs\fP object containing an arbitrary number of name value pairs may be constructed by repeatedly using operator() on the object returned by MakeParameters, for example: 
.PP
.nf

    \fBAlgorithmParameters\fP parameters = MakeParameters(name1, value1)(name2, value2)(name3, value3);
  
.fi
.PP
 
.RE
.PP

.SH "Member Function Documentation"
.PP 
.SS "bool AlgorithmParameters::GetVoidValue (const char * name, const std::type_info & valueType, void * pValue) const\fR [virtual]\fP"

.PP
Get a named value\&. 
.PP
\fBParameters\fP
.RS 4
\fIname\fP the name of the object or value to retrieve 
.br
\fIvalueType\fP reference to a variable that receives the value 
.br
\fIpValue\fP void pointer to a variable that receives the value 
.RE
.PP
\fBReturns\fP
.RS 4
true if the value was retrieved, false otherwise
.RE
.PP
\fBGetVoidValue()\fP retrieves the value of name if it exists\&. 
.PP
\fBNote\fP
.RS 4
\fBGetVoidValue()\fP is an internal function and should be implemented by derived classes\&. Users should use one of the other functions instead\&. 
.RE
.PP
\fBSee also\fP
.RS 4
\fBGetValue()\fP, \fBGetValueWithDefault()\fP, \fBGetIntValue()\fP, \fBGetIntValueWithDefault()\fP, \fBGetRequiredParameter()\fP and \fBGetRequiredIntParameter()\fP 
.RE
.PP

.PP
Implements \fBNameValuePairs\fP\&.
.SS "template<class T> \fBAlgorithmParameters\fP & AlgorithmParameters::operator() (const char * name, const T & value)\fR [inline]\fP"

.PP
Appends a NameValuePair to a collection of \fBNameValuePairs\fP\&. 
.PP
\fBTemplate Parameters\fP
.RS 4
\fIT\fP the class or type 
.RE
.PP
\fBParameters\fP
.RS 4
\fIname\fP the name of the object or value to retrieve 
.br
\fIvalue\fP reference to a variable that receives the value 
.RE
.PP

.SS "template<class T> \fBAlgorithmParameters\fP & AlgorithmParameters::operator() (const char * name, const T & value, bool throwIfNotUsed)\fR [inline]\fP"

.PP
\fBTemplate Parameters\fP
.RS 4
\fIT\fP the class or type 
.RE
.PP
\fBParameters\fP
.RS 4
\fIname\fP the name of the object or value to retrieve 
.br
\fIvalue\fP reference to a variable that receives the value 
.br
\fIthrowIfNotUsed\fP if true, the object will throw an exception if the value is not accessed 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for My Project from the source code\&.
