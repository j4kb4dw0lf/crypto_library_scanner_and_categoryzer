.TH "Sosemanuk" 3 "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Sosemanuk \- \fBSosemanuk\fP stream cipher\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fR#include <sosemanuk\&.h>\fP
.PP
Inherits \fBSosemanukInfo\fP, and \fBSymmetricCipherDocumentation\fP\&.
.SS "Public Types"

.in +1c
.ti -1c
.RI "typedef \fBSymmetricCipherFinal\fP< \fBConcretePolicyHolder\fP< \fBSosemanukPolicy\fP, \fBAdditiveCipherTemplate\fP<> >, \fBSosemanukInfo\fP > \fBEncryption\fP"
.br
.ti -1c
.RI "typedef \fBEncryption\fP \fBDecryption\fP"
.br
.in -1c

Public Types inherited from \fBSymmetricCipherDocumentation\fP
.in +1c
.ti -1c
.RI "typedef \fBSymmetricCipher\fP \fBEncryption\fP"
.br
.RI "implements the \fBSymmetricCipher\fP interface "
.ti -1c
.RI "typedef \fBSymmetricCipher\fP \fBDecryption\fP"
.br
.RI "implements the \fBSymmetricCipher\fP interface "
.in -1c
.SS "Additional Inherited Members"


Public Member Functions inherited from \fBSosemanukInfo\fP
.in +1c
.ti -1c
.RI "CRYPTOPP_STATIC_CONSTEXPR const char * \fBStaticAlgorithmName\fP ()"
.br
.in -1c

Public Member Functions inherited from \fBVariableKeyLength< 16, 1, 32, 1, SimpleKeyingInterface::UNIQUE_IV, 16 >\fP
.in +1c
.ti -1c
.RI "\fBCRYPTOPP_CONSTANT\fP (MIN_KEYLENGTH=N)"
.br
.RI "The minimum key length used by the algorithm provided as a constant\&. "
.ti -1c
.RI "CRYPTOPP_STATIC_CONSTEXPR size_t CRYPTOPP_API \fBStaticGetValidKeyLength\fP (size_t keylength)"
.br
.RI "Provides a valid key length for the algorithm provided by a static function\&. "
.in -1c
.SH "Detailed Description"
.PP 
\fBSosemanuk\fP stream cipher\&. 

is a stream cipher developed by Come Berbain, Olivier Billet, Anne Canteaut, Nicolas Courtois, Henri Gilbert, Louis Goubin, Aline Gouget, Louis Granboulan, Cédric Lauradoux, Marine Minier, Thomas Pornin and Hervé Sibert\&. \fBSosemanuk\fP is one of the final four Profile 1 (software) ciphers selected for the eSTREAM Portfolio\&. 
.PP
\fBSee also\fP
.RS 4
\fRSosemanuk\fP 
.RE
.PP
\fBSince\fP
.RS 4
Crypto++ 5\&.5 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for My Project from the source code\&.
