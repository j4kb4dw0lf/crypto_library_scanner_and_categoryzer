.TH "ModExpPrecomputation" 3 "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ModExpPrecomputation
.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBDL_GroupPrecomputation< Integer >\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "bool \fBNeedConversions\fP () const"
.br
.RI "Determines if elements needs conversion\&. "
.ti -1c
.RI "\fBElement\fP \fBConvertIn\fP (const \fBElement\fP &v) const"
.br
.RI "Converts an element between representations\&. "
.ti -1c
.RI "virtual \fBElement\fP \fBConvertOut\fP (const \fBElement\fP &v) const"
.br
.RI "Converts an element between representations\&. "
.ti -1c
.RI "const \fBAbstractGroup\fP< \fBElement\fP > & \fBGetGroup\fP () const"
.br
.RI "Retrieves \fBAbstractGroup\fP interface\&. "
.ti -1c
.RI "\fBElement\fP \fBBERDecodeElement\fP (\fBBufferedTransformation\fP &bt) const"
.br
.RI "Decodes element in DER format\&. "
.ti -1c
.RI "void \fBDEREncodeElement\fP (\fBBufferedTransformation\fP &bt, const \fBElement\fP &v) const"
.br
.RI "Encodes element in DER format\&. "
.ti -1c
.RI "void \fBSetModulus\fP (const \fBInteger\fP &v)"
.br
.ti -1c
.RI "const \fBInteger\fP & \fBGetModulus\fP () const"
.br
.in -1c
.SS "Additional Inherited Members"


Public Types inherited from \fBDL_GroupPrecomputation< Integer >\fP
.in +1c
.ti -1c
.RI "typedef \fBInteger\fP \fBElement\fP"
.br
.in -1c
.SH "Member Function Documentation"
.PP 
.SS "\fBElement\fP ModExpPrecomputation::BERDecodeElement (\fBBufferedTransformation\fP & bt) const\fR [inline]\fP, \fR [virtual]\fP"

.PP
Decodes element in DER format\&. 
.PP
\fBParameters\fP
.RS 4
\fIbt\fP \fBBufferedTransformation\fP object 
.RE
.PP
\fBReturns\fP
.RS 4
element in the group 
.RE
.PP

.PP
Implements \fBDL_GroupPrecomputation< Integer >\fP\&.
.SS "\fBElement\fP ModExpPrecomputation::ConvertIn (const \fBElement\fP & v) const\fR [inline]\fP, \fR [virtual]\fP"

.PP
Converts an element between representations\&. 
.PP
\fBParameters\fP
.RS 4
\fIv\fP element to convert 
.RE
.PP
\fBReturns\fP
.RS 4
an element converted to an alternate representation for internal use
.RE
.PP
ConvertIn is used when an element must convert between representations\&. 
.PP
Reimplemented from \fBDL_GroupPrecomputation< Integer >\fP\&.
.SS "virtual \fBElement\fP ModExpPrecomputation::ConvertOut (const \fBElement\fP & v) const\fR [inline]\fP, \fR [virtual]\fP"

.PP
Converts an element between representations\&. 
.PP
\fBParameters\fP
.RS 4
\fIv\fP element to convert 
.RE
.PP
\fBReturns\fP
.RS 4
an element converted from an alternate representation 
.RE
.PP

.PP
Reimplemented from \fBDL_GroupPrecomputation< Integer >\fP\&.
.SS "void ModExpPrecomputation::DEREncodeElement (\fBBufferedTransformation\fP & bt, const \fBElement\fP & P) const\fR [inline]\fP, \fR [virtual]\fP"

.PP
Encodes element in DER format\&. 
.PP
\fBParameters\fP
.RS 4
\fIbt\fP \fBBufferedTransformation\fP object 
.br
\fIP\fP Element to encode 
.RE
.PP

.PP
Implements \fBDL_GroupPrecomputation< Integer >\fP\&.
.SS "const \fBAbstractGroup\fP< \fBElement\fP > & ModExpPrecomputation::GetGroup () const\fR [inline]\fP, \fR [virtual]\fP"

.PP
Retrieves \fBAbstractGroup\fP interface\&. 
.PP
\fBReturns\fP
.RS 4
\fBGetGroup()\fP returns the \fBAbstractGroup\fP interface 
.RE
.PP

.PP
Implements \fBDL_GroupPrecomputation< Integer >\fP\&.
.SS "bool ModExpPrecomputation::NeedConversions () const\fR [inline]\fP, \fR [virtual]\fP"

.PP
Determines if elements needs conversion\&. 
.PP
\fBReturns\fP
.RS 4
true if the element needs conversion, false otherwise
.RE
.PP
NeedConversions determines if an element must convert between representations\&. 
.PP
Reimplemented from \fBDL_GroupPrecomputation< Integer >\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for My Project from the source code\&.
