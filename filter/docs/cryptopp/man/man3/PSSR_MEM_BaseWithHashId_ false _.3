.TH "PSSR_MEM_BaseWithHashId< false >" 3 "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
PSSR_MEM_BaseWithHashId< false > \- \fBPSSR\fP Message Encoding Method without Hash Identifier\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fR#include <pssr\&.h>\fP
.PP
Inherits \fBPSSR_MEM_Base\fP\&.
.PP
Inherited by \fBPSSR_MEM< true >\fP, \fBPSSR_MEM< false >\fP, and \fBPSSR_MEM< ALLOW_RECOVERY, MGF, SALT_LEN, MIN_PAD_LEN, USE_HASH_ID >\fP\&.
.SS "Additional Inherited Members"


Public Member Functions inherited from \fBPK_RecoverableSignatureMessageEncodingMethod\fP
.in +1c
.ti -1c
.RI "bool \fBVerifyMessageRepresentative\fP (\fBHashTransformation\fP &hash, HashIdentifier hashIdentifier, bool messageEmpty, \fBbyte\fP *representative, size_t representativeBitLength) const"
.br
.in -1c

Public Member Functions inherited from \fBPK_SignatureMessageEncodingMethod\fP
.in +1c
.ti -1c
.RI "bool \fBIsProbabilistic\fP () const"
.br
.RI "Determines whether an encoding method requires a random number generator\&. "
.ti -1c
.RI "bool \fBAllowNonrecoverablePart\fP () const"
.br
.ti -1c
.RI "virtual void \fBProcessSemisignature\fP (\fBHashTransformation\fP &hash, const \fBbyte\fP *semisignature, size_t semisignatureLength) const"
.br
.ti -1c
.RI "virtual void \fBProcessRecoverableMessage\fP (\fBHashTransformation\fP &hash, const \fBbyte\fP *recoverableMessage, size_t recoverableMessageLength, const \fBbyte\fP *presignature, size_t presignatureLength, \fBSecByteBlock\fP &semisignature) const"
.br
.ti -1c
.RI "virtual \fBDecodingResult\fP \fBRecoverMessageFromSemisignature\fP (\fBHashTransformation\fP &hash, HashIdentifier hashIdentifier, const \fBbyte\fP *presignature, size_t presignatureLength, const \fBbyte\fP *semisignature, size_t semisignatureLength, \fBbyte\fP *recoveredMessage) const"
.br
.in -1c

Protected Member Functions inherited from \fBPSSR_MEM_Base\fP
.in +1c
.ti -1c
.RI "virtual bool \fBAllowRecovery\fP () const =0"
.br
.ti -1c
.RI "virtual size_t \fBSaltLen\fP (size_t hashLen) const =0"
.br
.ti -1c
.RI "virtual size_t \fBMinPadLen\fP (size_t hashLen) const =0"
.br
.ti -1c
.RI "virtual const \fBMaskGeneratingFunction\fP & \fBGetMGF\fP () const =0"
.br
.in -1c
.SH "Detailed Description"
.PP 
\fBPSSR\fP Message Encoding Method without Hash Identifier\&. 

If USE_HASH_ID is false, then \fBPSSR_MEM_Base\fP is used for the base class 
.PP
\fBSince\fP
.RS 4
Crypto++ 2\&.1 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for My Project from the source code\&.
