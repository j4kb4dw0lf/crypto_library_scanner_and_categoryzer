.TH "IteratedHashWithStaticTransform< T_HashWordType, T_Endianness, T_BlockSize, T_StateSize, T_Transform, T_DigestSize, T_StateAligned >" 3 "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
IteratedHashWithStaticTransform< T_HashWordType, T_Endianness, T_BlockSize, T_StateSize, T_Transform, T_DigestSize, T_StateAligned > \- Iterated hash with a static transformation function\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fR#include <iterhash\&.h>\fP
.PP
Inherits \fBClonableImpl< T_Transform, AlgorithmImpl< IteratedHash< T_HashWordType, T_Endianness, T_BlockSize >, T_Transform > >\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBCRYPTOPP_CONSTANT\fP (DIGESTSIZE=T_DigestSize ? T_DigestSize :T_StateSize)"
.br
.ti -1c
.RI "unsigned int \fBDigestSize\fP () const"
.br
.RI "Provides the digest size of the hash\&. "
.in -1c

Public Member Functions inherited from \fBClonableImpl< T_Transform, AlgorithmImpl< IteratedHash< T_HashWordType, T_Endianness, T_BlockSize >, T_Transform > >\fP
.in +1c
.ti -1c
.RI "\fBClonable\fP * \fBClone\fP () const"
.br
.RI "Create a copy of this object\&. "
.in -1c

Public Member Functions inherited from \fBAlgorithmImpl< IteratedHash< T_HashWordType, T_Endianness, T_BlockSize >, T_Transform >\fP
.in +1c
.ti -1c
.RI "std::string \fBAlgorithmName\fP () const"
.br
.RI "The algorithm name\&. "
.in -1c

Public Member Functions inherited from \fBIteratedHash< T_HashWordType, T_Endianness, T_BlockSize, T_Base >\fP
.in +1c
.ti -1c
.RI "\fBCRYPTOPP_CONSTANT\fP (BLOCKSIZE=T_BlockSize)"
.br
.ti -1c
.RI "\fBCRYPTOPP_COMPILE_ASSERT\fP ((T_BlockSize &(T_BlockSize \- 1))==0)"
.br
.ti -1c
.RI "unsigned int \fBBlockSize\fP () const"
.br
.RI "Provides the block size of the hash\&. "
.ti -1c
.RI "\fBByteOrder\fP \fBGetByteOrder\fP () const"
.br
.RI "Provides the byte order of the hash\&. "
.ti -1c
.RI "void \fBCorrectEndianess\fP (HashWordType *out, const HashWordType *in, size_t byteCount)"
.br
.RI "Adjusts the byte ordering of the hash\&. "
.in -1c

Public Member Functions inherited from \fBIteratedHashBase< T_HashWordType, HashTransformation >\fP
.in +1c
.ti -1c
.RI "\fBIteratedHashBase\fP ()"
.br
.RI "Construct an \fBIteratedHashBase\fP\&. "
.ti -1c
.RI "unsigned int \fBOptimalBlockSize\fP () const"
.br
.RI "Provides the input block size most efficient for this cipher\&. "
.ti -1c
.RI "unsigned int \fBOptimalDataAlignment\fP () const"
.br
.RI "Provides input and output data alignment for optimal performance\&. "
.ti -1c
.RI "void \fBUpdate\fP (const \fBbyte\fP *input, size_t length)"
.br
.RI "Updates a hash with additional input\&. "
.ti -1c
.RI "\fBbyte\fP * \fBCreateUpdateSpace\fP (size_t &size)"
.br
.RI "Requests space which can be written into by the caller\&. "
.ti -1c
.RI "void \fBRestart\fP ()"
.br
.RI "Restart the hash\&. "
.ti -1c
.RI "void \fBTruncatedFinal\fP (\fBbyte\fP *digest, size_t digestSize)"
.br
.RI "Computes the hash of the current message\&. "
.ti -1c
.RI "virtual std::string \fBAlgorithmProvider\fP () const"
.br
.RI "Retrieve the provider of this algorithm\&. "
.in -1c

Public Member Functions inherited from \fBHashTransformation\fP
.in +1c
.ti -1c
.RI "\fBHashTransformation\fP & \fBRef\fP ()"
.br
.RI "Provides a reference to this object\&. "
.ti -1c
.RI "virtual void \fBFinal\fP (\fBbyte\fP *digest)"
.br
.RI "Computes the hash of the current message\&. "
.ti -1c
.RI "unsigned int \fBTagSize\fP () const"
.br
.ti -1c
.RI "virtual void \fBCalculateDigest\fP (\fBbyte\fP *digest, const \fBbyte\fP *input, size_t length)"
.br
.RI "Updates the hash with additional input and computes the hash of the current message\&. "
.ti -1c
.RI "virtual bool \fBVerify\fP (const \fBbyte\fP *digest)"
.br
.RI "Verifies the hash of the current message\&. "
.ti -1c
.RI "virtual bool \fBVerifyDigest\fP (const \fBbyte\fP *digest, const \fBbyte\fP *input, size_t length)"
.br
.RI "Updates the hash with additional input and verifies the hash of the current message\&. "
.ti -1c
.RI "virtual void \fBCalculateTruncatedDigest\fP (\fBbyte\fP *digest, size_t digestSize, const \fBbyte\fP *input, size_t length)"
.br
.RI "Updates the hash with additional input and computes the hash of the current message\&. "
.ti -1c
.RI "virtual bool \fBTruncatedVerify\fP (const \fBbyte\fP *digest, size_t digestLength)"
.br
.RI "Verifies the hash of the current message\&. "
.ti -1c
.RI "virtual bool \fBVerifyTruncatedDigest\fP (const \fBbyte\fP *digest, size_t digestLength, const \fBbyte\fP *input, size_t length)"
.br
.RI "Updates the hash with additional input and verifies the hash of the current message\&. "
.in -1c

Public Member Functions inherited from \fBAlgorithm\fP
.in +1c
.ti -1c
.RI "\fBAlgorithm\fP (bool checkSelfTestStatus=true)"
.br
.RI "Interface for all crypto algorithms\&. "
.in -1c
.SS "Protected Types"

.in +1c
.ti -1c
.RI "enum { \fBBlocks\fP = T_BlockSize/sizeof(T_HashWordType) }"
.br
.in -1c

Protected Types inherited from \fBIteratedHash< T_HashWordType, T_Endianness, T_BlockSize, T_Base >\fP
.in +1c
.ti -1c
.RI "enum { \fBBlocks\fP = T_BlockSize/sizeof(T_HashWordType) }"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "void \fBHashEndianCorrectedBlock\fP (const T_HashWordType *data)"
.br
.ti -1c
.RI "void \fBInit\fP ()"
.br
.ti -1c
.RI "T_HashWordType * \fBStateBuf\fP ()"
.br
.in -1c

Protected Member Functions inherited from \fBIteratedHash< T_HashWordType, T_Endianness, T_BlockSize, T_Base >\fP
.in +1c
.ti -1c
.RI "T_HashWordType * \fBDataBuf\fP ()"
.br
.in -1c

Protected Member Functions inherited from \fBIteratedHashBase< T_HashWordType, HashTransformation >\fP
.in +1c
.ti -1c
.RI "T_HashWordType \fBGetBitCountHi\fP () const"
.br
.ti -1c
.RI "T_HashWordType \fBGetBitCountLo\fP () const"
.br
.ti -1c
.RI "void \fBPadLastBlock\fP (unsigned int lastBlockSize, \fBbyte\fP padFirst=0x80)"
.br
.ti -1c
.RI "virtual size_t \fBHashMultipleBlocks\fP (const T_HashWordType *input, size_t length)"
.br
.ti -1c
.RI "void \fBHashBlock\fP (const HashWordType *input)"
.br
.in -1c

Protected Member Functions inherited from \fBHashTransformation\fP
.in +1c
.ti -1c
.RI "void \fBThrowIfInvalidTruncatedSize\fP (size_t size) const"
.br
.RI "Validates a truncated digest size\&. "
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "\fBFixedSizeAlignedSecBlock\fP< T_HashWordType, Blocks, T_StateAligned > \fBm_state\fP"
.br
.in -1c

Protected Attributes inherited from \fBIteratedHash< T_HashWordType, T_Endianness, T_BlockSize, T_Base >\fP
.in +1c
.ti -1c
.RI "\fBFixedSizeSecBlock\fP< T_HashWordType, Blocks > \fBm_data\fP"
.br
.in -1c
.SS "Additional Inherited Members"


Public Types inherited from \fBIteratedHash< T_HashWordType, T_Endianness, T_BlockSize, T_Base >\fP
.in +1c
.ti -1c
.RI "typedef T_Endianness \fBByteOrderClass\fP"
.br
.ti -1c
.RI "typedef T_HashWordType \fBHashWordType\fP"
.br
.in -1c

Public Types inherited from \fBIteratedHashBase< T_HashWordType, HashTransformation >\fP
.in +1c
.ti -1c
.RI "typedef T_HashWordType \fBHashWordType\fP"
.br
.in -1c

Static Public Member Functions inherited from \fBAlgorithmImpl< IteratedHash< T_HashWordType, T_Endianness, T_BlockSize >, T_Transform >\fP
.in +1c
.ti -1c
.RI "static std::string CRYPTOPP_API \fBStaticAlgorithmName\fP ()"
.br
.RI "The algorithm name\&. "
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<class T_HashWordType, class T_Endianness, unsigned int T_BlockSize, unsigned int T_StateSize, class T_Transform, unsigned int T_DigestSize = 0, bool T_StateAligned = false>
.br
class IteratedHashWithStaticTransform< T_HashWordType, T_Endianness, T_BlockSize, T_StateSize, T_Transform, T_DigestSize, T_StateAligned >"Iterated hash with a static transformation function\&. 


.PP
\fBTemplate Parameters\fP
.RS 4
\fIT_HashWordType\fP Hash word type 
.br
\fIT_Endianness\fP Endianness type of hash 
.br
\fIT_BlockSize\fP Block size of the hash 
.br
\fIT_StateSize\fP Internal state size of the hash 
.br
\fIT_Transform\fP \fBHashTransformation\fP derived class 
.br
\fIT_DigestSize\fP Digest size of the hash 
.br
\fIT_StateAligned\fP Flag indicating if state is 16-byte aligned 
.RE
.PP
\fBSee also\fP
.RS 4
\fBHashTransformation\fP, \fBMessageAuthenticationCode\fP 
.RE
.PP

.SH "Member Function Documentation"
.PP 
.SS "template<class T_HashWordType, class T_Endianness, unsigned int T_BlockSize, unsigned int T_StateSize, class T_Transform, unsigned int T_DigestSize = 0, bool T_StateAligned = false> unsigned int \fBIteratedHashWithStaticTransform\fP< T_HashWordType, T_Endianness, T_BlockSize, T_StateSize, T_Transform, T_DigestSize, T_StateAligned >::DigestSize () const\fR [inline]\fP, \fR [virtual]\fP"

.PP
Provides the digest size of the hash\&. 
.PP
\fBReturns\fP
.RS 4
the digest size of the hash, in bytes
.RE
.PP
\fBDigestSize()\fP returns \fRDIGESTSIZE\fP\&. 
.PP
Implements \fBHashTransformation\fP\&.
.SS "template<class T_HashWordType, class T_Endianness, unsigned int T_BlockSize, unsigned int T_StateSize, class T_Transform, unsigned int T_DigestSize = 0, bool T_StateAligned = false> void \fBIteratedHashWithStaticTransform\fP< T_HashWordType, T_Endianness, T_BlockSize, T_StateSize, T_Transform, T_DigestSize, T_StateAligned >::HashEndianCorrectedBlock (const T_HashWordType * data)\fR [inline]\fP, \fR [protected]\fP, \fR [virtual]\fP"

.PP
Implements \fBIteratedHashBase< T_HashWordType, HashTransformation >\fP\&.
.SS "template<class T_HashWordType, class T_Endianness, unsigned int T_BlockSize, unsigned int T_StateSize, class T_Transform, unsigned int T_DigestSize = 0, bool T_StateAligned = false> void \fBIteratedHashWithStaticTransform\fP< T_HashWordType, T_Endianness, T_BlockSize, T_StateSize, T_Transform, T_DigestSize, T_StateAligned >::Init ()\fR [inline]\fP, \fR [protected]\fP, \fR [virtual]\fP"

.PP
Implements \fBIteratedHashBase< T_HashWordType, HashTransformation >\fP\&.
.SS "template<class T_HashWordType, class T_Endianness, unsigned int T_BlockSize, unsigned int T_StateSize, class T_Transform, unsigned int T_DigestSize = 0, bool T_StateAligned = false> T_HashWordType * \fBIteratedHashWithStaticTransform\fP< T_HashWordType, T_Endianness, T_BlockSize, T_StateSize, T_Transform, T_DigestSize, T_StateAligned >::StateBuf ()\fR [inline]\fP, \fR [protected]\fP, \fR [virtual]\fP"

.PP
Implements \fBIteratedHashBase< T_HashWordType, HashTransformation >\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for My Project from the source code\&.
