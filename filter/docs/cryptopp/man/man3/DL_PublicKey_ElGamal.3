.TH "DL_PublicKey_ElGamal< BASE >" 3 "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
DL_PublicKey_ElGamal< BASE > \- \fBElGamal\fP Public Key adapter\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fR#include <elgamal\&.h>\fP
.PP
Inherits BASE\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "virtual \fBOID\fP \fBGetAlgorithmID\fP () const"
.br
.RI "Retrieves the \fBOID\fP of the algorithm\&. "
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<class BASE>
.br
struct DL_PublicKey_ElGamal< BASE >"\fBElGamal\fP Public Key adapter\&. 


.PP
\fBTemplate Parameters\fP
.RS 4
\fIBASE\fP \fBPublicKey\fP derived class
.RE
.PP
\fBDL_PublicKey_ElGamal\fP provides an override for \fBGetAlgorithmID()\fP to utilize 1\&.3\&.14\&.7\&.2\&.1\&.1\&. Prior to \fBDL_PublicKey_ElGamal\fP, the \fBElGamal\fP keys [mistakenly] used the \fBOID\fP from \fBDSA\fP due to DL_GroupParmaters_GFP()\&. If you need to \fRLoad\fP an \fBElGamal\fP key with the wrong \fBOID\fP then see \fRElGamal\fP on the Crypto++ wiki\&. 
.PP
\fBSee also\fP
.RS 4
\fRIssue 876\fP, \fRIssue 567\fP 
.RE
.PP
\fBSince\fP
.RS 4
Crypto++ 8\&.3 
.RE
.PP

.SH "Member Function Documentation"
.PP 
.SS "template<class BASE> virtual \fBOID\fP \fBDL_PublicKey_ElGamal\fP< BASE >::GetAlgorithmID () const\fR [inline]\fP, \fR [virtual]\fP"

.PP
Retrieves the \fBOID\fP of the algorithm\&. 
.PP
\fBReturns\fP
.RS 4
\fBOID\fP of the algorithm
.RE
.PP
\fBDL_PrivateKey_ElGamal\fP provides an override for \fBGetAlgorithmID()\fP to utilize 1\&.3\&.14\&.7\&.2\&.1\&.1\&. Prior to \fBDL_PrivateKey_ElGamal\fP, the \fBElGamal\fP keys [mistakenly] used the \fBOID\fP from \fBDSA\fP due to DL_GroupParmaters_GFP()\&. If you need to \fRLoad\fP an \fBElGamal\fP key with the wrong \fBOID\fP then see \fRElGamal\fP on the Crypto++ wiki\&. 
.PP
\fBSee also\fP
.RS 4
\fRIssue 876\fP, \fRIssue 567\fP 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for My Project from the source code\&.
