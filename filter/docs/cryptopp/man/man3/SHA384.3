.TH "SHA384" 3 "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
SHA384 \- SHA-384 message digest\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fR#include <sha\&.h>\fP
.PP
Inherits \fBIteratedHashWithStaticTransform< word64, BigEndian, 128, 64, SHA384, 48, true >\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "CRYPTOPP_STATIC_CONSTEXPR const char *CRYPTOPP_API \fBStaticAlgorithmName\fP ()"
.br
.RI "The algorithm name\&. "
.ti -1c
.RI "std::string \fBAlgorithmProvider\fP () const"
.br
.RI "Retrieve the provider of this algorithm\&. "
.in -1c

Public Member Functions inherited from \fBIteratedHashWithStaticTransform< word64, BigEndian, 128, 64, SHA384, 48, true >\fP
.in +1c
.ti -1c
.RI "\fBCRYPTOPP_CONSTANT\fP (DIGESTSIZE=T_DigestSize ? T_DigestSize :T_StateSize)"
.br
.ti -1c
.RI "unsigned int \fBDigestSize\fP () const"
.br
.RI "Provides the digest size of the hash\&. "
.in -1c

Public Member Functions inherited from \fBClonableImpl< SHA384, AlgorithmImpl< IteratedHash< word64, BigEndian, T_BlockSize >, SHA384 > >\fP
.in +1c
.ti -1c
.RI "\fBClonable\fP * \fBClone\fP () const"
.br
.RI "Create a copy of this object\&. "
.in -1c

Public Member Functions inherited from \fBAlgorithmImpl< IteratedHash< word64, BigEndian, T_BlockSize >, SHA384 >\fP
.in +1c
.ti -1c
.RI "std::string \fBAlgorithmName\fP () const"
.br
.RI "The algorithm name\&. "
.in -1c

Public Member Functions inherited from \fBIteratedHash< word64, BigEndian, T_BlockSize >\fP
.in +1c
.ti -1c
.RI "\fBCRYPTOPP_CONSTANT\fP (BLOCKSIZE=T_BlockSize)"
.br
.ti -1c
.RI "\fBCRYPTOPP_COMPILE_ASSERT\fP ((T_BlockSize &(T_BlockSize \- 1))==0)"
.br
.ti -1c
.RI "unsigned int \fBBlockSize\fP () const"
.br
.RI "Provides the block size of the hash\&. "
.ti -1c
.RI "\fBByteOrder\fP \fBGetByteOrder\fP () const"
.br
.RI "Provides the byte order of the hash\&. "
.ti -1c
.RI "void \fBCorrectEndianess\fP (HashWordType *out, const HashWordType *in, size_t byteCount)"
.br
.RI "Adjusts the byte ordering of the hash\&. "
.in -1c

Public Member Functions inherited from \fBIteratedHashBase< word64, HashTransformation >\fP
.in +1c
.ti -1c
.RI "\fBIteratedHashBase\fP ()"
.br
.RI "Construct an \fBIteratedHashBase\fP\&. "
.ti -1c
.RI "unsigned int \fBOptimalBlockSize\fP () const"
.br
.RI "Provides the input block size most efficient for this cipher\&. "
.ti -1c
.RI "unsigned int \fBOptimalDataAlignment\fP () const"
.br
.RI "Provides input and output data alignment for optimal performance\&. "
.ti -1c
.RI "void \fBUpdate\fP (const \fBbyte\fP *input, size_t length)"
.br
.RI "Updates a hash with additional input\&. "
.ti -1c
.RI "\fBbyte\fP * \fBCreateUpdateSpace\fP (size_t &size)"
.br
.RI "Requests space which can be written into by the caller\&. "
.ti -1c
.RI "void \fBRestart\fP ()"
.br
.RI "Restart the hash\&. "
.ti -1c
.RI "void \fBTruncatedFinal\fP (\fBbyte\fP *digest, size_t digestSize)"
.br
.RI "Computes the hash of the current message\&. "
.in -1c

Public Member Functions inherited from \fBHashTransformation\fP
.in +1c
.ti -1c
.RI "\fBHashTransformation\fP & \fBRef\fP ()"
.br
.RI "Provides a reference to this object\&. "
.ti -1c
.RI "virtual void \fBFinal\fP (\fBbyte\fP *digest)"
.br
.RI "Computes the hash of the current message\&. "
.ti -1c
.RI "unsigned int \fBTagSize\fP () const"
.br
.ti -1c
.RI "virtual void \fBCalculateDigest\fP (\fBbyte\fP *digest, const \fBbyte\fP *input, size_t length)"
.br
.RI "Updates the hash with additional input and computes the hash of the current message\&. "
.ti -1c
.RI "virtual bool \fBVerify\fP (const \fBbyte\fP *digest)"
.br
.RI "Verifies the hash of the current message\&. "
.ti -1c
.RI "virtual bool \fBVerifyDigest\fP (const \fBbyte\fP *digest, const \fBbyte\fP *input, size_t length)"
.br
.RI "Updates the hash with additional input and verifies the hash of the current message\&. "
.ti -1c
.RI "virtual void \fBCalculateTruncatedDigest\fP (\fBbyte\fP *digest, size_t digestSize, const \fBbyte\fP *input, size_t length)"
.br
.RI "Updates the hash with additional input and computes the hash of the current message\&. "
.ti -1c
.RI "virtual bool \fBTruncatedVerify\fP (const \fBbyte\fP *digest, size_t digestLength)"
.br
.RI "Verifies the hash of the current message\&. "
.ti -1c
.RI "virtual bool \fBVerifyTruncatedDigest\fP (const \fBbyte\fP *digest, size_t digestLength, const \fBbyte\fP *input, size_t length)"
.br
.RI "Updates the hash with additional input and verifies the hash of the current message\&. "
.in -1c

Public Member Functions inherited from \fBAlgorithm\fP
.in +1c
.ti -1c
.RI "\fBAlgorithm\fP (bool checkSelfTestStatus=true)"
.br
.RI "Interface for all crypto algorithms\&. "
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static void CRYPTOPP_API \fBInitState\fP (HashWordType *state)"
.br
.RI "Initialize state array\&. "
.ti -1c
.RI "static void CRYPTOPP_API \fBTransform\fP (HashWordType *digest, const HashWordType *data)"
.br
.RI "Operate the hash\&. "
.in -1c

Static Public Member Functions inherited from \fBAlgorithmImpl< IteratedHash< word64, BigEndian, T_BlockSize >, SHA384 >\fP
.in +1c
.ti -1c
.RI "static std::string CRYPTOPP_API \fBStaticAlgorithmName\fP ()"
.br
.RI "The algorithm name\&. "
.in -1c
.SS "Additional Inherited Members"


Public Types inherited from \fBIteratedHash< word64, BigEndian, T_BlockSize >\fP
.in +1c
.ti -1c
.RI "typedef \fBBigEndian\fP \fBByteOrderClass\fP"
.br
.ti -1c
.RI "typedef word64 \fBHashWordType\fP"
.br
.in -1c

Public Types inherited from \fBIteratedHashBase< word64, HashTransformation >\fP
.in +1c
.ti -1c
.RI "typedef word64 \fBHashWordType\fP"
.br
.in -1c

Protected Types inherited from \fBIteratedHashWithStaticTransform< word64, BigEndian, 128, 64, SHA384, 48, true >\fP
.in +1c
.ti -1c
.RI "enum "
.br
.in -1c

Protected Types inherited from \fBIteratedHash< word64, BigEndian, T_BlockSize >\fP
.in +1c
.ti -1c
.RI "enum "
.br
.in -1c

Protected Member Functions inherited from \fBIteratedHashWithStaticTransform< word64, BigEndian, 128, 64, SHA384, 48, true >\fP
.in +1c
.ti -1c
.RI "void \fBHashEndianCorrectedBlock\fP (const word64 *data)"
.br
.ti -1c
.RI "void \fBInit\fP ()"
.br
.ti -1c
.RI "word64 * \fBStateBuf\fP ()"
.br
.in -1c

Protected Member Functions inherited from \fBIteratedHash< word64, BigEndian, T_BlockSize >\fP
.in +1c
.ti -1c
.RI "word64 * \fBDataBuf\fP ()"
.br
.in -1c

Protected Member Functions inherited from \fBIteratedHashBase< word64, HashTransformation >\fP
.in +1c
.ti -1c
.RI "word64 \fBGetBitCountHi\fP () const"
.br
.ti -1c
.RI "word64 \fBGetBitCountLo\fP () const"
.br
.ti -1c
.RI "void \fBPadLastBlock\fP (unsigned int lastBlockSize, \fBbyte\fP padFirst=0x80)"
.br
.ti -1c
.RI "virtual size_t \fBHashMultipleBlocks\fP (const word64 *input, size_t length)"
.br
.ti -1c
.RI "void \fBHashBlock\fP (const HashWordType *input)"
.br
.in -1c

Protected Member Functions inherited from \fBHashTransformation\fP
.in +1c
.ti -1c
.RI "void \fBThrowIfInvalidTruncatedSize\fP (size_t size) const"
.br
.RI "Validates a truncated digest size\&. "
.in -1c

Protected Attributes inherited from \fBIteratedHashWithStaticTransform< word64, BigEndian, 128, 64, SHA384, 48, true >\fP
.in +1c
.ti -1c
.RI "\fBFixedSizeAlignedSecBlock\fP< word64, Blocks, T_StateAligned > \fBm_state\fP"
.br
.in -1c

Protected Attributes inherited from \fBIteratedHash< word64, BigEndian, T_BlockSize >\fP
.in +1c
.ti -1c
.RI "\fBFixedSizeSecBlock\fP< word64, Blocks > \fBm_data\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
SHA-384 message digest\&. 


.PP
\fBSee also\fP
.RS 4
\fRSHA-384\fP 
.RE
.PP
\fBSince\fP
.RS 4
SHA2 since Crypto++ 4\&.0, Power8 SHA since Crypto++ 6\&.1 
.RE
.PP

.SH "Member Function Documentation"
.PP 
.SS "std::string SHA384::AlgorithmProvider () const\fR [virtual]\fP"

.PP
Retrieve the provider of this algorithm\&. 
.PP
\fBReturns\fP
.RS 4
the algorithm provider
.RE
.PP
The algorithm provider can be a name like "C++", "SSE", "NEON", "AESNI", "ARMv8" and "Power8"\&. C++ is standard C++ code\&. Other labels, like SSE, usually indicate a specialized implementation using instructions from a higher instruction set architecture (ISA)\&. Future labels may include external hardware like a hardware security module (HSM)\&. 
.PP
\fBNote\fP
.RS 4
Provider is not universally implemented yet\&. 
.RE
.PP

.PP
Reimplemented from \fBIteratedHashBase< word64, HashTransformation >\fP\&.
.SS "void SHA384::InitState (HashWordType * state)\fR [static]\fP"

.PP
Initialize state array\&. 
.PP
\fBParameters\fP
.RS 4
\fIstate\fP the state of the hash
.RE
.PP
InitState sets a state array to \fBSHA384\fP initial values

.PP
Hashes which derive from \fBIteratedHashWithStaticTransform\fP provide static member functions InitState and Transform\&. External classes, like \fBSEAL\fP and \fBMDC\fP, can initialize state with a user provided key and operate the hash on the data with the user supplied state\&. 
.PP
\fBNote\fP
.RS 4
On Intel platforms the state array must be 16-byte aligned for SSE2\&. 
.RE
.PP

.SS "CRYPTOPP_STATIC_CONSTEXPR const char *CRYPTOPP_API SHA384::StaticAlgorithmName ()\fR [inline]\fP"

.PP
The algorithm name\&. 
.PP
\fBReturns\fP
.RS 4
C-style string "SHA-384" 
.RE
.PP

.SS "void CRYPTOPP_API SHA384::Transform (HashWordType * digest, const HashWordType * data)\fR [inline]\fP, \fR [static]\fP"

.PP
Operate the hash\&. 
.PP
\fBParameters\fP
.RS 4
\fIdigest\fP the state of the hash 
.br
\fIdata\fP the data to be digested
.RE
.PP
Transform operates the hash on \fRdata\fP\&. When the call is invoked \fRdigest\fP holds initial state\&. Upon return \fRdigest\fP holds the hash or updated state\&.

.PP
Hashes which derive from \fBIteratedHashWithStaticTransform\fP provide static member functions InitState and Transform\&. External classes, like \fBSEAL\fP and \fBMDC\fP, can initialize state with a user provided key and operate the hash on the data with the user supplied state\&. 
.PP
\fBNote\fP
.RS 4
On Intel platforms the state array and data must be 16-byte aligned for SSE2\&. 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for My Project from the source code\&.
