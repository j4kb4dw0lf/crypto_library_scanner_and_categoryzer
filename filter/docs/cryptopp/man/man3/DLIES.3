.TH "DLIES< HASH, COFACTOR_OPTION, DHAES_MODE, LABEL_OCTETS >" 3 "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
DLIES< HASH, COFACTOR_OPTION, DHAES_MODE, LABEL_OCTETS > \- Discrete Log Integrated Encryption Scheme\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fR#include <gfpcrypt\&.h>\fP
.PP
Inherits \fBDL_ES< DL_CryptoKeys_GFP, DL_KeyAgreementAlgorithm_DH< Integer, NoCofactorMultiplication >, DL_KeyDerivationAlgorithm_P1363< Integer, true, P1363_KDF2< SHA1 > >, DL_EncryptionAlgorithm_Xor< HMAC< SHA1 >, true, false >, DLIES<> >\fP\&.
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static std::string CRYPTOPP_API \fBStaticAlgorithmName\fP ()"
.br
.in -1c
.SS "Additional Inherited Members"


Public Types inherited from \fBDL_ES< DL_CryptoKeys_GFP, DL_KeyAgreementAlgorithm_DH< Integer, NoCofactorMultiplication >, DL_KeyDerivationAlgorithm_P1363< Integer, true, P1363_KDF2< SHA1 > >, DL_EncryptionAlgorithm_Xor< HMAC< SHA1 >, true, false >, DLIES<> >\fP
.in +1c
.ti -1c
.RI "typedef \fBPK_FinalTemplate\fP< \fBDL_DecryptorImpl\fP< \fBSchemeOptions\fP > > \fBDecryptor\fP"
.br
.RI "implements \fBPK_Decryptor\fP interface "
.ti -1c
.RI "typedef \fBPK_FinalTemplate\fP< \fBDL_EncryptorImpl\fP< \fBSchemeOptions\fP > > \fBEncryptor\fP"
.br
.RI "implements \fBPK_Encryptor\fP interface "
.in -1c

Public Types inherited from \fBDL_CryptoKeys_GFP\fP
.in +1c
.ti -1c
.RI "typedef \fBDL_GroupParameters_GFP_DefaultSafePrime\fP \fBGroupParameters\fP"
.br
.ti -1c
.RI "typedef \fBDL_PublicKey_GFP\fP< \fBGroupParameters\fP > \fBPublicKey\fP"
.br
.ti -1c
.RI "typedef \fBDL_PrivateKey_GFP\fP< \fBGroupParameters\fP > \fBPrivateKey\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<class HASH = SHA1, class COFACTOR_OPTION = NoCofactorMultiplication, bool DHAES_MODE = true, bool LABEL_OCTETS = false>
.br
struct DLIES< HASH, COFACTOR_OPTION, DHAES_MODE, LABEL_OCTETS >"Discrete Log Integrated Encryption Scheme\&. 


.PP
\fBTemplate Parameters\fP
.RS 4
\fICOFACTOR_OPTION\fP cofactor multiplication option 
.br
\fIHASH\fP \fBHashTransformation\fP derived class used for key drivation and MAC computation 
.br
\fIDHAES_MODE\fP flag indicating if the MAC includes addition context parameters such as the label 
.br
\fILABEL_OCTETS\fP flag indicating if the label size is specified in octets or bits
.RE
.PP
\fBDLIES\fP is an \fBInteger\fP based Integrated Encryption Scheme (IES)\&. The scheme combines a Key Encapsulation Method (KEM) with a Data Encapsulation Method (DEM) and a MAC tag\&. The scheme is \fRIND-CCA2\fP, which is a strong notion of security\&. You should prefer an Integrated Encryption Scheme over homegrown schemes\&.

.PP
The library's original implementation is based on an early P1363 draft, which itself appears to be based on an early Certicom SEC-1 draft (or an early SEC-1 draft was based on a P1363 draft)\&. Crypto++ 4\&.2 used the early draft in its Integrated Ecryption Schemes with \fRNoCofactorMultiplication\fP, \fRDHAES_MODE=false\fP and \fRLABEL_OCTETS=true\fP\&.

.PP
If you desire an Integrated Encryption Scheme with Crypto++ 4\&.2 compatibility, then use the \fBDLIES\fP template class with \fRNoCofactorMultiplication\fP, \fRDHAES_MODE=false\fP and \fRLABEL_OCTETS=true\fP\&.

.PP
If you desire an Integrated Encryption Scheme with Bouncy Castle 1\&.54 and Botan 1\&.11 compatibility, then use the \fBDLIES\fP template class with \fRNoCofactorMultiplication\fP, \fRDHAES_MODE=true\fP and \fRLABEL_OCTETS=false\fP\&.

.PP
The default template parameters ensure compatibility with Bouncy Castle 1\&.54 and Botan 1\&.11\&. The combination of \fRIncompatibleCofactorMultiplication\fP and \fRDHAES_MODE=true\fP is recommended for best efficiency and security\&. \fBSHA1\fP is used for compatibility reasons, but it can be changed if desired\&. SHA-256 or another hash will likely improve the security provided by the MAC\&. The hash is also used in the key derivation function as a PRF\&.

.PP
Below is an example of constructing a Crypto++ 4\&.2 compatible \fBDLIES\fP encryptor and decryptor\&. 
.PP
.nf

   AutoSeededRandomPool prng;
   \fBDL_PrivateKey_GFP<DL_GroupParameters_GFP>\fP key;
   key\&.Initialize(prng, 2048);

   \fBDLIES<SHA1,NoCofactorMultiplication,true,true>::Decryptor\fP decryptor(key);
   \fBDLIES<SHA1,NoCofactorMultiplication,true,true>::Encryptor\fP encryptor(decryptor);
.fi
.PP
 
.PP
\fBSee also\fP
.RS 4
\fBECIES\fP, \fRDiscrete Log Integrated Encryption Scheme (DLIES)\fP, Martínez, Encinas, and Ávila's \fRA Survey of the Elliptic Curve Integrated Encryption Schemes\fP 
.RE
.PP
\fBSince\fP
.RS 4
Crypto++ 4\&.0, Crypto++ 5\&.7 for Bouncy Castle and Botan compatibility 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for My Project from the source code\&.
