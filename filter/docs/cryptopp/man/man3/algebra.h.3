.TH "/home/mock/cryptopp-master/algebra.h" 3 "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
/home/mock/cryptopp-master/algebra.h \- Classes for performing mathematics over different fields\&.

.SH SYNOPSIS
.br
.PP
\fR#include 'config\&.h'\fP
.br
\fR#include 'integer\&.h'\fP
.br
\fR#include 'misc\&.h'\fP
.br

.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBAbstractGroup< T >\fP"
.br
.RI "Abstract group\&. "
.ti -1c
.RI "class \fBAbstractRing< T >\fP"
.br
.RI "Abstract ring\&. "
.ti -1c
.RI "struct \fBBaseAndExponent< T, E >\fP"
.br
.RI "Base and exponent\&. "
.ti -1c
.RI "class \fBAbstractEuclideanDomain< T >\fP"
.br
.RI "Abstract Euclidean domain\&. "
.ti -1c
.RI "class \fBEuclideanDomainOf< T >\fP"
.br
.RI "Euclidean domain\&. "
.ti -1c
.RI "class \fBQuotientRing< T >\fP"
.br
.RI "Quotient ring\&. "
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "template<class \fBElement\fP, class Iterator> \fBElement\fP \fBGeneralCascadeMultiplication\fP (const \fBAbstractGroup\fP< \fBElement\fP > &group, Iterator begin, Iterator end)"
.br
.ti -1c
.RI "template<class \fBElement\fP, class Iterator> \fBElement\fP \fBGeneralCascadeExponentiation\fP (const \fBAbstractRing\fP< \fBElement\fP > &ring, Iterator begin, Iterator end)"
.br
.in -1c
.SH "Detailed Description"
.PP
Classes for performing mathematics over different fields\&.


.SH "Author"
.PP
Generated automatically by Doxygen for My Project from the source code\&.
