.TH "ChaChaTLS" 3 "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ChaChaTLS \- IETF ChaCha20 stream cipher\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fR#include <chacha\&.h>\fP
.PP
Inherits \fBChaChaTLS_Info\fP, and \fBSymmetricCipherDocumentation\fP\&.
.SS "Public Types"

.in +1c
.ti -1c
.RI "typedef \fBSymmetricCipherFinal\fP< \fBConcretePolicyHolder\fP< \fBChaChaTLS_Policy\fP, \fBAdditiveCipherTemplate\fP<> >, \fBChaChaTLS_Info\fP > \fBEncryption\fP"
.br
.RI "ChaCha-TLS \fBEncryption\fP\&. "
.ti -1c
.RI "typedef \fBEncryption\fP \fBDecryption\fP"
.br
.RI "ChaCha-TLS \fBDecryption\fP\&. "
.in -1c

Public Types inherited from \fBSymmetricCipherDocumentation\fP
.in +1c
.ti -1c
.RI "typedef \fBSymmetricCipher\fP \fBEncryption\fP"
.br
.RI "implements the \fBSymmetricCipher\fP interface "
.ti -1c
.RI "typedef \fBSymmetricCipher\fP \fBDecryption\fP"
.br
.RI "implements the \fBSymmetricCipher\fP interface "
.in -1c
.SS "Additional Inherited Members"


Public Member Functions inherited from \fBFixedKeyLength< 32, SimpleKeyingInterface::UNIQUE_IV, 12 >\fP
.in +1c
.ti -1c
.RI "\fBCRYPTOPP_CONSTANT\fP (KEYLENGTH=N)"
.br
.RI "The default key length used by the algorithm provided as a constant\&. "
.ti -1c
.RI "CRYPTOPP_STATIC_CONSTEXPR size_t CRYPTOPP_API \fBStaticGetValidKeyLength\fP (size_t keylength)"
.br
.RI "The default key length for the algorithm provided by a static function\&. "
.in -1c

Public Member Functions inherited from \fBFixedRounds< 20 >\fP
.in +1c
.ti -1c
.RI "\fBCRYPTOPP_CONSTANT\fP (ROUNDS=R)"
.br
.RI "The number of rounds for the algorithm provided as a constant\&. "
.in -1c

Static Public Member Functions inherited from \fBChaChaTLS_Info\fP
.in +1c
.ti -1c
.RI "static const char * \fBStaticAlgorithmName\fP ()"
.br
.RI "The algorithm name\&. "
.in -1c
.SH "Detailed Description"
.PP 
IETF ChaCha20 stream cipher\&. 

This is the IETF's variant of Bernstein's \fBChaCha\fP from RFC 8439\&. IETF \fBChaCha\fP is called \fBChaChaTLS\fP in the Crypto++ library\&. It is \fIslightly\fP different from the Bernstein implementation\&. ChaCha-TLS can be used for cipher suites \fRTLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256\fP, \fRTLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256\fP, and \fRTLS_DHE_RSA_WITH_CHACHA20_POLY1305_SHA256\fP\&. 
.PP
\fBSee also\fP
.RS 4
\fRRFC 8439, ChaCha20 and Poly1305 for IETF Protocols\fP, \fRHow to handle block counter wrap in IETF's ChaCha algorithm?\fP and \fRIssue 790, ChaChaTLS results when counter block wraps\fP\&. 
.RE
.PP
\fBSince\fP
.RS 4
Crypto++ 8\&.1 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for My Project from the source code\&.
