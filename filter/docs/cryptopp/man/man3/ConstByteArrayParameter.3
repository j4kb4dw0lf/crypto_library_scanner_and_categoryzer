.TH "ConstByteArrayParameter" 3 "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ConstByteArrayParameter \- Used to pass byte array input as part of a \fBNameValuePairs\fP object\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fR#include <algparam\&.h>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBConstByteArrayParameter\fP (const char *data=NULLPTR, bool deepCopy=false)"
.br
.RI "Construct a \fBConstByteArrayParameter\fP\&. "
.ti -1c
.RI "\fBConstByteArrayParameter\fP (const \fBbyte\fP *data, size_t \fBsize\fP, bool deepCopy=false)"
.br
.RI "Construct a \fBConstByteArrayParameter\fP\&. "
.ti -1c
.RI "template<class T> \fBConstByteArrayParameter\fP (const T &string, bool deepCopy=false)"
.br
.RI "Construct a \fBConstByteArrayParameter\fP\&. "
.ti -1c
.RI "void \fBAssign\fP (const \fBbyte\fP *data, size_t \fBsize\fP, bool deepCopy)"
.br
.RI "Assign contents from a memory buffer\&. "
.ti -1c
.RI "const \fBbyte\fP * \fBbegin\fP () const"
.br
.RI "Pointer to the first byte in the memory block\&. "
.ti -1c
.RI "const \fBbyte\fP * \fBend\fP () const"
.br
.RI "Pointer beyond the last byte in the memory block\&. "
.ti -1c
.RI "size_t \fBsize\fP () const"
.br
.RI "Length of the memory block\&. "
.in -1c
.SH "Detailed Description"
.PP 
Used to pass byte array input as part of a \fBNameValuePairs\fP object\&. 
.SH "Constructor & Destructor Documentation"
.PP 
.SS "ConstByteArrayParameter::ConstByteArrayParameter (const char * data = \fRNULLPTR\fP, bool deepCopy = \fRfalse\fP)\fR [inline]\fP"

.PP
Construct a \fBConstByteArrayParameter\fP\&. 
.PP
\fBParameters\fP
.RS 4
\fIdata\fP a C-String 
.br
\fIdeepCopy\fP flag indicating whether the data should be copied
.RE
.PP
The deepCopy option is used when the \fBNameValuePairs\fP object can't keep a copy of the data available 
.SS "ConstByteArrayParameter::ConstByteArrayParameter (const \fBbyte\fP * data, size_t size, bool deepCopy = \fRfalse\fP)\fR [inline]\fP"

.PP
Construct a \fBConstByteArrayParameter\fP\&. 
.PP
\fBParameters\fP
.RS 4
\fIdata\fP a memory buffer 
.br
\fIsize\fP the length of the memory buffer 
.br
\fIdeepCopy\fP flag indicating whether the data should be copied
.RE
.PP
The deepCopy option is used when the \fBNameValuePairs\fP object can't keep a copy of the data available 
.SS "template<class T> ConstByteArrayParameter::ConstByteArrayParameter (const T & string, bool deepCopy = \fRfalse\fP)\fR [inline]\fP"

.PP
Construct a \fBConstByteArrayParameter\fP\&. 
.PP
\fBTemplate Parameters\fP
.RS 4
\fIT\fP a std::basic_string<char> or std::vector<byte> class 
.RE
.PP
\fBParameters\fP
.RS 4
\fIstring\fP a std::basic_string<char> or std::vector<byte> object 
.br
\fIdeepCopy\fP flag indicating whether the data should be copied
.RE
.PP
The deepCopy option is used when the \fBNameValuePairs\fP object can't keep a copy of the data available 
.SH "Member Function Documentation"
.PP 
.SS "void ConstByteArrayParameter::Assign (const \fBbyte\fP * data, size_t size, bool deepCopy)\fR [inline]\fP"

.PP
Assign contents from a memory buffer\&. 
.PP
\fBParameters\fP
.RS 4
\fIdata\fP a memory buffer 
.br
\fIsize\fP the length of the memory buffer 
.br
\fIdeepCopy\fP flag indicating whether the data should be copied
.RE
.PP
The deepCopy option is used when the \fBNameValuePairs\fP object can't keep a copy of the data available 

.SH "Author"
.PP 
Generated automatically by Doxygen for My Project from the source code\&.
