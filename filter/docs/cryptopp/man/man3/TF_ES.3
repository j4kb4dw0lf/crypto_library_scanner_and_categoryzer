.TH "TF_ES< KEYS, STANDARD, ALG_INFO >" 3 "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
TF_ES< KEYS, STANDARD, ALG_INFO > \- Trapdoor Function (TF) encryption scheme\&.  

.SH SYNOPSIS
.br
.PP
.PP
Inherits KEYS\&.
.PP
Inherited by \fBDecryptor<>\fP, \fBEncryptor<>\fP, \fBDecryptor<>\fP, and \fBEncryptor<>\fP\&.
.SS "Public Types"

.in +1c
.ti -1c
.RI "typedef STANDARD \fBStandard\fP"
.br
.RI "see \fBEncryptionStandard\fP for a list of standards "
.ti -1c
.RI "typedef \fBTF_CryptoSchemeOptions\fP< ALG_INFO, KEYS, MessageEncodingMethod > \fBSchemeOptions\fP"
.br
.ti -1c
.RI "typedef \fBPK_FinalTemplate\fP< \fBTF_DecryptorImpl\fP< \fBSchemeOptions\fP > > \fBDecryptor\fP"
.br
.RI "implements \fBPK_Decryptor\fP interface "
.ti -1c
.RI "typedef \fBPK_FinalTemplate\fP< \fBTF_EncryptorImpl\fP< \fBSchemeOptions\fP > > \fBEncryptor\fP"
.br
.RI "implements \fBPK_Encryptor\fP interface "
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static std::string CRYPTOPP_API \fBStaticAlgorithmName\fP ()"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<class KEYS, class STANDARD, class ALG_INFO = TF_ES<KEYS, STANDARD, int>>
.br
class TF_ES< KEYS, STANDARD, ALG_INFO >"Trapdoor Function (TF) encryption scheme\&. 


.PP
\fBTemplate Parameters\fP
.RS 4
\fISTANDARD\fP standard 
.br
\fIKEYS\fP keys used in the encryption scheme 
.br
\fIALG_INFO\fP algorithm information 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for My Project from the source code\&.
