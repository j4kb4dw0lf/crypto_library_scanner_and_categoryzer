.TH "PKCS8PrivateKey" 3 "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
PKCS8PrivateKey \- Encodes and Decodes privateKeyInfo\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fR#include <asn\&.h>\fP
.PP
Inherits \fBASN1CryptoMaterial< PrivateKey >\fP\&.
.PP
Inherited by \fBDL_KeyImpl< PKCS8PrivateKey, GP >\fP, \fBDL_KeyImpl< PKCS8PrivateKey, DL_GroupParameters_EC< EC > >\fP, \fBInvertibleRSAFunction\fP, \fBed25519PrivateKey\fP, and \fBx25519\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "void \fBBERDecode\fP (\fBBufferedTransformation\fP &bt)"
.br
.RI "Decode this object from a \fBBufferedTransformation\fP\&. "
.ti -1c
.RI "void \fBDEREncode\fP (\fBBufferedTransformation\fP &bt) const"
.br
.RI "Encode this object into a \fBBufferedTransformation\fP\&. "
.ti -1c
.RI "virtual \fBOID\fP \fBGetAlgorithmID\fP () const =0"
.br
.RI "Retrieves the \fBOID\fP of the algorithm\&. "
.ti -1c
.RI "virtual bool \fBBERDecodeAlgorithmParameters\fP (\fBBufferedTransformation\fP &bt)"
.br
.RI "Decode optional parameters\&. "
.ti -1c
.RI "virtual bool \fBDEREncodeAlgorithmParameters\fP (\fBBufferedTransformation\fP &bt) const"
.br
.RI "Encode optional parameters\&. "
.ti -1c
.RI "virtual void \fBBERDecodePrivateKey\fP (\fBBufferedTransformation\fP &bt, bool parametersPresent, size_t size)=0"
.br
.RI "Decode privateKey part of privateKeyInfo\&. "
.ti -1c
.RI "virtual void \fBDEREncodePrivateKey\fP (\fBBufferedTransformation\fP &bt) const =0"
.br
.RI "Encode privateKey part of privateKeyInfo\&. "
.ti -1c
.RI "virtual void \fBBERDecodeOptionalAttributes\fP (\fBBufferedTransformation\fP &bt)"
.br
.RI "Decode optional attributes\&. "
.ti -1c
.RI "virtual void \fBDEREncodeOptionalAttributes\fP (\fBBufferedTransformation\fP &bt) const"
.br
.RI "Encode optional attributes\&. "
.in -1c

Public Member Functions inherited from \fBASN1CryptoMaterial< PrivateKey >\fP
.in +1c
.ti -1c
.RI "void \fBSave\fP (\fBBufferedTransformation\fP &bt) const"
.br
.RI "DER encode ASN\&.1 object\&. "
.ti -1c
.RI "void \fBLoad\fP (\fBBufferedTransformation\fP &bt)"
.br
.RI "BER decode ASN\&.1 object\&. "
.in -1c

Public Member Functions inherited from \fBASN1Object\fP
.in +1c
.ti -1c
.RI "virtual void \fBBEREncode\fP (\fBBufferedTransformation\fP &bt) const"
.br
.RI "Encode this object into a \fBBufferedTransformation\fP\&. "
.in -1c

Public Member Functions inherited from \fBGeneratableCryptoMaterial\fP
.in +1c
.ti -1c
.RI "virtual void \fBGenerateRandom\fP (\fBRandomNumberGenerator\fP &rng, const \fBNameValuePairs\fP &params=g_nullNameValuePairs)"
.br
.RI "Generate a random key or crypto parameters\&. "
.ti -1c
.RI "void \fBGenerateRandomWithKeySize\fP (\fBRandomNumberGenerator\fP &rng, unsigned int keySize)"
.br
.RI "Generate a random key or crypto parameters\&. "
.in -1c

Public Member Functions inherited from \fBCryptoMaterial\fP
.in +1c
.ti -1c
.RI "virtual void \fBAssignFrom\fP (const \fBNameValuePairs\fP &source)=0"
.br
.RI "Assign values to this object\&. "
.ti -1c
.RI "virtual bool \fBValidate\fP (\fBRandomNumberGenerator\fP &rng, unsigned int level) const =0"
.br
.RI "Check this object for errors\&. "
.ti -1c
.RI "virtual void \fBThrowIfInvalid\fP (\fBRandomNumberGenerator\fP &rng, unsigned int level) const"
.br
.RI "Check this object for errors\&. "
.ti -1c
.RI "virtual bool \fBSupportsPrecomputation\fP () const"
.br
.RI "Determines whether the object supports precomputation\&. "
.ti -1c
.RI "virtual void \fBPrecompute\fP (unsigned int precomputationStorage)"
.br
.RI "Perform precomputation\&. "
.ti -1c
.RI "virtual void \fBLoadPrecomputation\fP (\fBBufferedTransformation\fP &storedPrecomputation)"
.br
.RI "Retrieve previously saved precomputation\&. "
.ti -1c
.RI "virtual void \fBSavePrecomputation\fP (\fBBufferedTransformation\fP &storedPrecomputation) const"
.br
.RI "Save precomputation for later use\&. "
.ti -1c
.RI "void \fBDoQuickSanityCheck\fP () const"
.br
.RI "Perform a quick sanity check\&. "
.in -1c

Public Member Functions inherited from \fBNameValuePairs\fP
.in +1c
.ti -1c
.RI "template<class T> bool \fBGetThisObject\fP (T &object) const"
.br
.RI "Get a copy of this object or subobject\&. "
.ti -1c
.RI "template<class T> bool \fBGetThisPointer\fP (T *&ptr) const"
.br
.RI "Get a pointer to this object\&. "
.ti -1c
.RI "template<class T> bool \fBGetValue\fP (const char *name, T &value) const"
.br
.RI "Get a named value\&. "
.ti -1c
.RI "template<class T> T \fBGetValueWithDefault\fP (const char *name, T defaultValue) const"
.br
.RI "Get a named value\&. "
.ti -1c
.RI "CRYPTOPP_DLL std::string \fBGetValueNames\fP () const"
.br
.RI "Get a list of value names that can be retrieved\&. "
.ti -1c
.RI "CRYPTOPP_DLL bool \fBGetIntValue\fP (const char *name, int &value) const"
.br
.RI "Get a named value with type int\&. "
.ti -1c
.RI "CRYPTOPP_DLL int \fBGetIntValueWithDefault\fP (const char *name, int defaultValue) const"
.br
.RI "Get a named value with type int, with default\&. "
.ti -1c
.RI "CRYPTOPP_DLL bool \fBGetWord64Value\fP (const char *name, word64 &value) const"
.br
.RI "Get a named value with type word64\&. "
.ti -1c
.RI "CRYPTOPP_DLL word64 \fBGetWord64ValueWithDefault\fP (const char *name, word64 defaultValue) const"
.br
.RI "Get a named value with type word64, with default\&. "
.ti -1c
.RI "template<class T> void \fBGetRequiredParameter\fP (const char *className, const char *name, T &value) const"
.br
.RI "Retrieves a required name/value pair\&. "
.ti -1c
.RI "CRYPTOPP_DLL void \fBGetRequiredIntParameter\fP (const char *className, const char *name, int &value) const"
.br
.RI "Retrieves a required name/value pair\&. "
.ti -1c
.RI "virtual CRYPTOPP_DLL bool \fBGetVoidValue\fP (const char *name, const std::type_info &valueType, void *pValue) const =0"
.br
.RI "Get a named value\&. "
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "\fBByteQueue\fP \fBm_optionalAttributes\fP"
.br
.in -1c
.SS "Additional Inherited Members"


Static Public Member Functions inherited from \fBNameValuePairs\fP
.in +1c
.ti -1c
.RI "static CRYPTOPP_DLL void CRYPTOPP_API \fBThrowIfTypeMismatch\fP (const char *name, const std::type_info &stored, const std::type_info &retrieving)"
.br
.RI "Ensures an expected name and type is present\&. "
.in -1c
.SH "Detailed Description"
.PP 
Encodes and Decodes privateKeyInfo\&. 
.SH "Member Function Documentation"
.PP 
.SS "void PKCS8PrivateKey::BERDecode (\fBBufferedTransformation\fP & bt)\fR [virtual]\fP"

.PP
Decode this object from a \fBBufferedTransformation\fP\&. 
.PP
\fBParameters\fP
.RS 4
\fIbt\fP \fBBufferedTransformation\fP object
.RE
.PP
Uses Basic Encoding Rules (BER) 
.PP
Implements \fBASN1Object\fP\&.
.PP
Reimplemented in \fBx25519\fP\&.
.SS "virtual bool PKCS8PrivateKey::BERDecodeAlgorithmParameters (\fBBufferedTransformation\fP & bt)\fR [inline]\fP, \fR [virtual]\fP"

.PP
Decode optional parameters\&. 
.PP
\fBParameters\fP
.RS 4
\fIbt\fP \fBBufferedTransformation\fP object 
.RE
.PP
\fBSee also\fP
.RS 4
\fBBERDecodePrivateKey\fP, \fRRFC 2459, section 7\&.3\&.1\fP 
.RE
.PP

.SS "void PKCS8PrivateKey::BERDecodeOptionalAttributes (\fBBufferedTransformation\fP & bt)\fR [virtual]\fP"

.PP
Decode optional attributes\&. 
.PP
\fBParameters\fP
.RS 4
\fIbt\fP \fBBufferedTransformation\fP object
.RE
.PP
\fBBERDecodeOptionalAttributes()\fP decodes optional attributes including context-specific tag\&. 
.PP
\fBSee also\fP
.RS 4
\fBBERDecodeAlgorithmParameters\fP, \fBDEREncodeOptionalAttributes\fP 
.RE
.PP
\fBNote\fP
.RS 4
default implementation stores attributes to be output using DEREncodeOptionalAttributes 
.RE
.PP

.SS "virtual void PKCS8PrivateKey::BERDecodePrivateKey (\fBBufferedTransformation\fP & bt, bool parametersPresent, size_t size)\fR [pure virtual]\fP"

.PP
Decode privateKey part of privateKeyInfo\&. 
.PP
\fBParameters\fP
.RS 4
\fIbt\fP \fBBufferedTransformation\fP object 
.br
\fIparametersPresent\fP flag indicating if algorithm parameters are present 
.br
\fIsize\fP number of octets to read for the parameters, in bytes
.RE
.PP
\fBBERDecodePrivateKey()\fP the decodes privateKey part of privateKeyInfo, without the OCTET STRING header\&.

.PP
When \fRparametersPresent = true\fP then \fBBERDecodePrivateKey()\fP calls \fBBERDecodeAlgorithmParameters()\fP to parse algorithm parameters\&. 
.PP
\fBSee also\fP
.RS 4
\fBBERDecodeAlgorithmParameters\fP 
.RE
.PP

.PP
Implemented in \fBDL_PrivateKey_EC< EC >\fP, \fBDL_PrivateKey_ECGDSA< EC >\fP, \fBDL_PrivateKeyImpl< GP >\fP, \fBDL_PrivateKeyImpl< DL_GroupParameters_EC< EC > >\fP, \fBed25519PrivateKey\fP, \fBInvertibleRSAFunction\fP, and \fBx25519\fP\&.
.SS "void PKCS8PrivateKey::DEREncode (\fBBufferedTransformation\fP & bt) const\fR [virtual]\fP"

.PP
Encode this object into a \fBBufferedTransformation\fP\&. 
.PP
\fBParameters\fP
.RS 4
\fIbt\fP \fBBufferedTransformation\fP object
.RE
.PP
Uses Distinguished Encoding Rules (DER) 
.PP
Implements \fBASN1Object\fP\&.
.PP
Reimplemented in \fBx25519\fP\&.
.SS "virtual bool PKCS8PrivateKey::DEREncodeAlgorithmParameters (\fBBufferedTransformation\fP & bt) const\fR [inline]\fP, \fR [virtual]\fP"

.PP
Encode optional parameters\&. 
.PP
\fBParameters\fP
.RS 4
\fIbt\fP \fBBufferedTransformation\fP object 
.RE
.PP
\fBSee also\fP
.RS 4
\fBDEREncodePrivateKey\fP, \fRRFC 2459, section 7\&.3\&.1\fP 
.RE
.PP

.SS "void PKCS8PrivateKey::DEREncodeOptionalAttributes (\fBBufferedTransformation\fP & bt) const\fR [virtual]\fP"

.PP
Encode optional attributes\&. 
.PP
\fBParameters\fP
.RS 4
\fIbt\fP \fBBufferedTransformation\fP object
.RE
.PP
\fBDEREncodeOptionalAttributes()\fP encodes optional attributes including context-specific tag\&. 
.PP
\fBSee also\fP
.RS 4
\fBBERDecodeAlgorithmParameters\fP 
.RE
.PP

.SS "virtual void PKCS8PrivateKey::DEREncodePrivateKey (\fBBufferedTransformation\fP & bt) const\fR [pure virtual]\fP"

.PP
Encode privateKey part of privateKeyInfo\&. 
.PP
\fBParameters\fP
.RS 4
\fIbt\fP \fBBufferedTransformation\fP object
.RE
.PP
\fBDEREncodePrivateKey()\fP encodes the privateKey part of privateKeyInfo, without the OCTET STRING header\&. 
.PP
\fBSee also\fP
.RS 4
\fBDEREncodeAlgorithmParameters\fP 
.RE
.PP

.PP
Implemented in \fBDL_PrivateKey_EC< EC >\fP, \fBDL_PrivateKey_ECGDSA< EC >\fP, \fBDL_PrivateKeyImpl< GP >\fP, \fBDL_PrivateKeyImpl< DL_GroupParameters_EC< EC > >\fP, \fBed25519PrivateKey\fP, \fBInvertibleRSAFunction\fP, and \fBx25519\fP\&.
.SS "virtual \fBOID\fP PKCS8PrivateKey::GetAlgorithmID () const\fR [pure virtual]\fP"

.PP
Retrieves the \fBOID\fP of the algorithm\&. 
.PP
\fBReturns\fP
.RS 4
\fBOID\fP of the algorithm 
.RE
.PP

.PP
Implemented in \fBDL_PrivateKey_ElGamal< DL_CryptoKeys_ElGamal::PrivateKey >\fP, \fBed25519PrivateKey\fP, \fBInvertibleRSAFunction\fP, and \fBx25519\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for My Project from the source code\&.
